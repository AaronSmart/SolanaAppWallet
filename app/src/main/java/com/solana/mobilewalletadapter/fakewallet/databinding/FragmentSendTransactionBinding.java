// Generated by view binder compiler. Do not edit!
package com.solana.mobilewalletadapter.fakewallet.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.econet.app.solwallet.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSendTransactionBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppCompatButton btnSendTransactionToCluster;

  @NonNull
  public final AppCompatButton btnSimulateTransactionsNotSubmitted;

  @NonNull
  public final AppCompatButton btnSimulateTransactionsSubmitted;

  @NonNull
  public final AppCompatTextView labelCluster;

  @NonNull
  public final AppCompatTextView labelSendTransaction;

  @NonNull
  public final AppCompatTextView textCluster;

  private FragmentSendTransactionBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppCompatButton btnSendTransactionToCluster,
      @NonNull AppCompatButton btnSimulateTransactionsNotSubmitted,
      @NonNull AppCompatButton btnSimulateTransactionsSubmitted,
      @NonNull AppCompatTextView labelCluster, @NonNull AppCompatTextView labelSendTransaction,
      @NonNull AppCompatTextView textCluster) {
    this.rootView = rootView;
    this.btnSendTransactionToCluster = btnSendTransactionToCluster;
    this.btnSimulateTransactionsNotSubmitted = btnSimulateTransactionsNotSubmitted;
    this.btnSimulateTransactionsSubmitted = btnSimulateTransactionsSubmitted;
    this.labelCluster = labelCluster;
    this.labelSendTransaction = labelSendTransaction;
    this.textCluster = textCluster;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSendTransactionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSendTransactionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_send_transaction, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSendTransactionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_send_transaction_to_cluster;
      AppCompatButton btnSendTransactionToCluster = ViewBindings.findChildViewById(rootView, id);
      if (btnSendTransactionToCluster == null) {
        break missingId;
      }

      id = R.id.btn_simulate_transactions_not_submitted;
      AppCompatButton btnSimulateTransactionsNotSubmitted = ViewBindings.findChildViewById(rootView, id);
      if (btnSimulateTransactionsNotSubmitted == null) {
        break missingId;
      }

      id = R.id.btn_simulate_transactions_submitted;
      AppCompatButton btnSimulateTransactionsSubmitted = ViewBindings.findChildViewById(rootView, id);
      if (btnSimulateTransactionsSubmitted == null) {
        break missingId;
      }

      id = R.id.label_cluster;
      AppCompatTextView labelCluster = ViewBindings.findChildViewById(rootView, id);
      if (labelCluster == null) {
        break missingId;
      }

      id = R.id.label_send_transaction;
      AppCompatTextView labelSendTransaction = ViewBindings.findChildViewById(rootView, id);
      if (labelSendTransaction == null) {
        break missingId;
      }

      id = R.id.text_cluster;
      AppCompatTextView textCluster = ViewBindings.findChildViewById(rootView, id);
      if (textCluster == null) {
        break missingId;
      }

      return new FragmentSendTransactionBinding((ConstraintLayout) rootView,
          btnSendTransactionToCluster, btnSimulateTransactionsNotSubmitted,
          btnSimulateTransactionsSubmitted, labelCluster, labelSendTransaction, textCluster);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
