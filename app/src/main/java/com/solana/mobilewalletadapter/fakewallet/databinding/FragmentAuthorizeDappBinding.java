// Generated by view binder compiler. Do not edit!
package com.solana.mobilewalletadapter.fakewallet.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.econet.app.solwallet.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentAuthorizeDappBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppCompatButton btnAuthorize;

  @NonNull
  public final AppCompatButton btnDecline;

  @NonNull
  public final AppCompatImageView imageIcon;

  @NonNull
  public final AppCompatTextView labelTitle;

  @NonNull
  public final AppCompatTextView labelVerificationScope;

  @NonNull
  public final AppCompatTextView labelVerificationState;

  @NonNull
  public final AppCompatTextView textName;

  @NonNull
  public final AppCompatTextView textUri;

  @NonNull
  public final AppCompatTextView textVerificationScope;

  @NonNull
  public final AppCompatTextView textVerificationState;

  private FragmentAuthorizeDappBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppCompatButton btnAuthorize, @NonNull AppCompatButton btnDecline,
      @NonNull AppCompatImageView imageIcon, @NonNull AppCompatTextView labelTitle,
      @NonNull AppCompatTextView labelVerificationScope,
      @NonNull AppCompatTextView labelVerificationState, @NonNull AppCompatTextView textName,
      @NonNull AppCompatTextView textUri, @NonNull AppCompatTextView textVerificationScope,
      @NonNull AppCompatTextView textVerificationState) {
    this.rootView = rootView;
    this.btnAuthorize = btnAuthorize;
    this.btnDecline = btnDecline;
    this.imageIcon = imageIcon;
    this.labelTitle = labelTitle;
    this.labelVerificationScope = labelVerificationScope;
    this.labelVerificationState = labelVerificationState;
    this.textName = textName;
    this.textUri = textUri;
    this.textVerificationScope = textVerificationScope;
    this.textVerificationState = textVerificationState;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentAuthorizeDappBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentAuthorizeDappBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_authorize_dapp, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentAuthorizeDappBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_authorize;
      AppCompatButton btnAuthorize = ViewBindings.findChildViewById(rootView, id);
      if (btnAuthorize == null) {
        break missingId;
      }

      id = R.id.btn_decline;
      AppCompatButton btnDecline = ViewBindings.findChildViewById(rootView, id);
      if (btnDecline == null) {
        break missingId;
      }

      id = R.id.image_icon;
      AppCompatImageView imageIcon = ViewBindings.findChildViewById(rootView, id);
      if (imageIcon == null) {
        break missingId;
      }

      id = R.id.label_title;
      AppCompatTextView labelTitle = ViewBindings.findChildViewById(rootView, id);
      if (labelTitle == null) {
        break missingId;
      }

      id = R.id.label_verification_scope;
      AppCompatTextView labelVerificationScope = ViewBindings.findChildViewById(rootView, id);
      if (labelVerificationScope == null) {
        break missingId;
      }

      id = R.id.label_verification_state;
      AppCompatTextView labelVerificationState = ViewBindings.findChildViewById(rootView, id);
      if (labelVerificationState == null) {
        break missingId;
      }

      id = R.id.text_name;
      AppCompatTextView textName = ViewBindings.findChildViewById(rootView, id);
      if (textName == null) {
        break missingId;
      }

      id = R.id.text_uri;
      AppCompatTextView textUri = ViewBindings.findChildViewById(rootView, id);
      if (textUri == null) {
        break missingId;
      }

      id = R.id.text_verification_scope;
      AppCompatTextView textVerificationScope = ViewBindings.findChildViewById(rootView, id);
      if (textVerificationScope == null) {
        break missingId;
      }

      id = R.id.text_verification_state;
      AppCompatTextView textVerificationState = ViewBindings.findChildViewById(rootView, id);
      if (textVerificationState == null) {
        break missingId;
      }

      return new FragmentAuthorizeDappBinding((ConstraintLayout) rootView, btnAuthorize, btnDecline,
          imageIcon, labelTitle, labelVerificationScope, labelVerificationState, textName, textUri,
          textVerificationScope, textVerificationState);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
